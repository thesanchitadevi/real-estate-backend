{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Real-Estate API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b>."
  },
  "servers": [
    {
      "url": "http://localhost:4000/",
      "description": "local server"
    },
    {
      "url": "http://localhost:4001/",
      "description": "the other server"
    }
  ],
  "paths": {
    "/api/attachment/": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "description": "Upload attachments",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/attachment/{filename}": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "description": "Get Attachment",
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/admin/register": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Register a new admin",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Registration Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Invalid Credentials"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "username",
                  "firstName",
                  "lastName",
                  "email",
                  "password"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 1,
                    "example": "tam11a"
                  },
                  "firstName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Rudolf"
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Tam"
                  },
                  "email": {
                    "type": "string",
                    "minLength": 1,
                    "example": "ibrahimsadiktamim@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "123456"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/login": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Sign a specific admin in",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Login Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Invalid Credentials"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "minLength": 1,
                    "example": "ibrahimsadiktamim@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "123456"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/validate": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Validate admin",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Authenticated"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "404": {
            "description": "No User Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/admin/update-profile": {
      "patch": {
        "tags": [
          "Admin"
        ],
        "description": "Update admin information",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Authenticated"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "404": {
            "description": "No User Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 1,
                    "example": "tam11a"
                  },
                  "firstName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Rudolf"
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Tam"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/authentication/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "Register a new user",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Registration Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Invalid Credentials"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "username",
                  "firstName",
                  "lastName",
                  "email",
                  "password"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 1,
                    "example": "tam11a"
                  },
                  "firstName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Rudolf"
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Tam"
                  },
                  "email": {
                    "type": "string",
                    "minLength": 1,
                    "example": "ibrahimsadiktamim@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "123456"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/authentication/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "Sign a specific user in",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Login Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Invalid Credentials"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "minLength": 1,
                    "example": "ibrahimsadiktamim@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "123456"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/authentication/validate": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "Validate user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Authenticated"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "404": {
            "description": "No User Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/authentication/update-profile": {
      "patch": {
        "tags": [
          "Authentication"
        ],
        "description": "Update user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Authenticated"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "404": {
            "description": "No User Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 1,
                    "example": "tam11a"
                  },
                  "firstName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Rudolf"
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Tam"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get all users list",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get user informations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "description": "Update user informations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 1,
                    "example": "tam11a"
                  },
                  "firstName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Rudolf"
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Tam"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Get all projects list",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "description": "Create a new project",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "projectName",
                  "types",
                  "status",
                  "orientation",
                  "architect",
                  "address",
                  "landSize",
                  "numberUnits",
                  "apartmentSize",
                  "numberFloors",
                  "numberParkings",
                  "handOverDate"
                ],
                "properties": {
                  "projectName": {
                    "type": "string",
                    "minLength": 10,
                    "example": "JCX PARK"
                  },
                  "address": {
                    "type": "string",
                    "minLength": 100,
                    "example": "Dhanmondi, Dhaka"
                  },
                  "city": {
                    "type": "string",
                    "minLength": 10,
                    "example": "Dhaka"
                  },
                  "area": {
                    "type": "string",
                    "minLength": 10,
                    "example": "Uttara"
                  },
                  "architect": {
                    "type": "string",
                    "minLength": 40,
                    "example": "AR Rahman"
                  },
                  "image": {
                    "type": "string"
                  },
                  "numberFloors": {
                    "type": "integer",
                    "minLength": 20,
                    "example": 10
                  },
                  "numberParkings": {
                    "type": "integer",
                    "minLength": 20,
                    "example": 10
                  },
                  "numberUnits": {
                    "type": "integer",
                    "minLength": 10,
                    "example": 3
                  },
                  "landSize": {
                    "type": "string",
                    "minLength": 10,
                    "example": "100 sq/ft"
                  },
                  "apartmentSize": {
                    "type": "string",
                    "minLength": 10,
                    "example": "100 sq/ft"
                  },
                  "types": {
                    "type": "array",
                    "enum": [
                      "construction",
                      "residential"
                    ],
                    "example": "residential"
                  },
                  "status": {
                    "type": "array",
                    "enum": [
                      "ongoing",
                      "upcoming",
                      "completed"
                    ],
                    "example": "ongoing"
                  },
                  "orientation": {
                    "type": "array",
                    "enum": [
                      "north",
                      "south",
                      "east",
                      "west"
                    ],
                    "example": "north"
                  },
                  "handOverDate": {
                    "type": "string",
                    "pattern": "YYYY-MM-DD",
                    "example": "2023-01-19"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{id}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Get project informations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Projects"
        ],
        "description": "Update project informations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "projectName": {
                    "type": "string",
                    "minLength": 10,
                    "example": "JCX Residential"
                  },
                  "address": {
                    "type": "string",
                    "minLength": 100,
                    "example": "Shamoli, Dhaka"
                  },
                  "architect": {
                    "type": "string",
                    "minLength": 40,
                    "example": "AR Rahman"
                  },
                  "city": {
                    "type": "string",
                    "minLength": 10,
                    "example": "Dhaka"
                  },
                  "area": {
                    "type": "string",
                    "minLength": 10,
                    "example": "Uttara"
                  },
                  "image": {
                    "type": "string"
                  },
                  "numberFloors": {
                    "type": "integer",
                    "minLength": 20,
                    "example": 10
                  },
                  "numberParkings": {
                    "type": "integer",
                    "minLength": 20,
                    "example": 10
                  },
                  "numberUnits": {
                    "type": "integer",
                    "minLength": 10,
                    "example": 3
                  },
                  "landSize": {
                    "type": "string",
                    "minLength": 10,
                    "example": "120 sq/ft"
                  },
                  "apartmentSize": {
                    "type": "string",
                    "minLength": 10,
                    "example": "150 sq/ft"
                  },
                  "types": {
                    "type": "array",
                    "enum": [
                      "construction",
                      "residential"
                    ],
                    "example": "residential"
                  },
                  "status": {
                    "type": "array",
                    "enum": [
                      "ongoing",
                      "upcoming",
                      "completed"
                    ],
                    "example": "upcoming"
                  },
                  "orientation": {
                    "type": "array",
                    "enum": [
                      "north",
                      "south",
                      "east",
                      "west"
                    ],
                    "example": "north"
                  },
                  "handOverDate": {
                    "type": "string",
                    "pattern": "YYYY-MM-DD",
                    "example": "2023-04-29"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "description": "Delete a project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "deprecated": true
      }
    },
    "/api/v1/projects/banner": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Get Banner Images",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "description": "Upload Banner",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/banner/{id}": {
      "delete": {
        "tags": [
          "Projects"
        ],
        "description": "delete banner image",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/testimonials/": {
      "get": {
        "tags": [
          "Testimonials"
        ],
        "description": "Get all testimonials list",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Testimonials"
        ],
        "description": "Create a new testimonial",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "firstName",
                  "lastName",
                  "testimonial"
                ],
                "properties": {
                  "firstName": {
                    "type": "string",
                    "minLength": 10,
                    "example": "PARK"
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 10,
                    "example": "JIMIN"
                  },
                  "testimonial": {
                    "type": "string",
                    "minLength": 10,
                    "example": "Trusting a company with your land is very important, and JCX Developments was the right choice as they earned our trust."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/testimonials/{id}": {
      "delete": {
        "tags": [
          "Testimonials"
        ],
        "description": "Delete a testimonial",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "deprecated": true
      }
    },
    "/api/v1/employee/": {
      "get": {
        "tags": [
          "Employee"
        ],
        "description": "Get all employee list",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Employee"
        ],
        "description": "Create a new employee",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "firstName",
                  "lastName",
                  "designation",
                  "description",
                  "image",
                  "rank"
                ],
                "properties": {
                  "firstName": {
                    "type": "string",
                    "minLength": 10,
                    "example": "AHMED ATAUL"
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 10,
                    "example": "KARIM"
                  },
                  "designation": {
                    "type": "string",
                    "minLength": 10,
                    "example": "Director"
                  },
                  "rank": {
                    "type": "integer",
                    "minLength": 10,
                    "example": "1"
                  },
                  "description": {
                    "type": "string",
                    "minLength": 10,
                    "example": "Mr. Ahmed Ataul Karim was born on 1st January 1974 in Feni District. He has participated in various professional training from time to time-related to his assigned job. It has increased his professional efficiency in all respects.     Mr. Ahmed Ataul Karim is also Director of JCX Developments Ltd, Chairman of Global Energy Ltd, Managing Director of Jams Consortium Ltd. Since his involvement with JCX Developments Ltd. as a director, he has become one of the most successful and well-renowned businessmen in the real estate sector of Bangladesh. He has travelled extensively in U.S.A, Thailand, France, Malaysia, U.K, Singapore, and many other countries."
                  },
                  "image": {
                    "type": "string"
                  },
                  "isActive": {
                    "type": "boolean",
                    "example": "true"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employee/{id}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "description": "Get employee informations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Employee"
        ],
        "description": "Update project informations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "firstName": {
                    "type": "string",
                    "minLength": 10,
                    "example": "AHMED ATAUL"
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 10,
                    "example": "KARIM"
                  },
                  "description": {
                    "type": "string",
                    "minLength": 10,
                    "example": "Mr. Ahmed Ataul Karim was born on 1st January 1974 in Feni District. He has participated in various professional training from time to time-related to his assigned job. It has increased his professional efficiency in all respects.     Mr. Ahmed Ataul Karim is also Director of JCX Developments Ltd, Chairman of Global Energy Ltd, Managing Director of Jams Consortium Ltd. Since his involvement with JCX Developments Ltd. as a director, he has become one of the most successful and well-renowned businessmen in the real estate sector of Bangladesh. He has travelled extensively in U.S.A, Thailand, France, Malaysia, U.K, Singapore, and many other countries."
                  },
                  "image": {
                    "type": "string"
                  },
                  "isActive": {
                    "type": "boolean",
                    "example": "true"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "description": "Delete an employee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "deprecated": true
      }
    },
    "/api/v1/landowner/": {
      "post": {
        "tags": [
          "Landowner"
        ],
        "description": "Create a new landowner",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {}
      },
      "get": {
        "tags": [
          "Landowner"
        ],
        "description": "Get all landowner list",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/buyer/": {
      "post": {
        "tags": [
          "Buyer"
        ],
        "description": "Create a new buyer",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "buyerName",
                  "buyerEmail",
                  "buyerProfession",
                  "phoneNumber",
                  "handoverDate",
                  "orientation",
                  "preferredLocation",
                  "preferredSize",
                  "preferredFloor",
                  "attractiveFeature",
                  "numberofBathroom",
                  "numberofBedroom",
                  "parkingSize"
                ],
                "properties": {
                  "buyerName": {
                    "type": "string",
                    "minLength": 10,
                    "example": "Farjana Moon"
                  },
                  "buyerEmail": {
                    "type": "string",
                    "minLength": 5,
                    "example": "khan@gmail.com"
                  },
                  "buyerProfession": {
                    "type": "string",
                    "minLength": 3,
                    "example": "progrommer"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "minLength": 11,
                    "example": "01234567891"
                  },
                  "handoverDate": {
                    "type": "date",
                    "pattern": "YYYY-MM-DD",
                    "example": "2023-01-19"
                  },
                  "preferredLocation": {
                    "type": "string",
                    "minLength": 5,
                    "example": "Hazibari, Uttara, Dhaka"
                  },
                  "preferredSize": {
                    "type": "string",
                    "minLength": 5,
                    "example": "100 sq/ft"
                  },
                  "preferredFloor": {
                    "type": "integer",
                    "example": 5
                  },
                  "numberofBathroom": {
                    "type": "integer",
                    "example": 3
                  },
                  "numberofBedroom": {
                    "type": "integer",
                    "example": 5
                  },
                  "attractiveFeature": {
                    "type": "string",
                    "example": "Lakeside"
                  },
                  "orientation": {
                    "type": "string",
                    "enum": [
                      "East",
                      "West",
                      "North",
                      "South"
                    ],
                    "example": "North"
                  },
                  "parkingSize": {
                    "type": "integer",
                    "example": 10
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Buyer"
        ],
        "description": "Get all buyer list",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/image/": {
      "get": {
        "tags": [
          "Image"
        ],
        "description": "Get Gallery Images",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Image"
        ],
        "description": "Upload gallery image",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/image/{id}": {
      "delete": {
        "tags": [
          "Image"
        ],
        "description": "delete gallery image",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/contact/": {
      "post": {
        "tags": [
          "Contact"
        ],
        "description": "Create a new contact",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "contactName",
                  "Email",
                  "phoneNumber",
                  "message"
                ],
                "properties": {
                  "contactName": {
                    "type": "string",
                    "minLength": 10,
                    "example": "Farjana"
                  },
                  "Email": {
                    "type": "string",
                    "minLength": 10,
                    "example": "farjana@gmail.com"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "minLength": 11,
                    "example": "01234567891"
                  },
                  "messsage": {
                    "type": "string",
                    "minLength": 5,
                    "example": "build my building carefully"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Contact"
        ],
        "description": "Get all contact list",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}